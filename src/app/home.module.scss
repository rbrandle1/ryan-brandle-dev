@use '@/styles/utils/typography';
@use '@/styles/utils/layout';
@use '@/styles/utils/viewport';
@use '@/styles/utils/element';

// Todo: update as section calc(var(--space-4xl) * 3)
// Todo: update calc(var(--space-8xl) * 2) as section padding

.home {
	--flow-space: var(--space-lg);
	--section-spacing: var(--space-6xl);

	@include viewport.breakpoint(xl) {
		--section-spacing: var(--space-8xl);
	}
}

.accentEdge {
	@include element.accent-edge;
}

.section {
	color: var(--text-primary);
	background-color: var(--surface-primary);
	padding-top: var(--section-spacing);
	padding-bottom: var(--section-spacing);
}

.container {
	@include layout.max-width;

	> * + * {
		margin-top: var(--flow-space);
	}
}

.multiSection {
	background-color: var(--surface-primary);
	position: relative;
	overflow: hidden;

	.section {
		position: relative;
		background-color: transparent;
	}
}

.hasGradient {
	&::before {
		--gradient-width: 200dvw;
		--gradient-height: var(--gradient-width);
		--gradient-location: calc(0% - var(--gradient-height) / 1.5);
		--gradient-blur: 70px;

		content: '';
		position: absolute;
		top: var(--gradient-location);
		left: 50%;
		transform: translateX(-50%);
		width: var(--gradient-width);
		height: var(--gradient-height);
		background-color: var(--p-color-gray-900);
		border-radius: 50%;
		will-change: filter;
		filter: blur(var(--gradient-blur));

		@include viewport.breakpoint(xs) {
			--gradient-location: calc(0% - var(--gradient-height) / 1.3);
		}

		@include viewport.breakpoint(sm) {
			--gradient-width: 130dvw;
			--gradient-height: calc(var(--gradient-width) / 2);
			--gradient-location: calc(0% - var(--gradient-height) / 2.5);
		}

		@include viewport.breakpoint(lg) {
			--gradient-width: 1200px;
		}

		@include viewport.breakpoint(xl) {
			--gradient-width: 2400px;
			--gradient-location: calc(0% - var(--gradient-height) / 1.3);
		}
	}
}

.featuredSection {
	--flow-space: var(--space-4xl);
	--featured-section-spacing: calc(var(--section-spacing) * 2);

	padding-bottom: var(--featured-section-spacing);

	@include viewport.breakpoint(md) {
		--flow-space: calc(var(--space-4xl) * 3);
	}
}

.projectSection {
	--flow-space: var(--space-2xl);
	--project-section-spacing: calc(var(--section-spacing) * 2);

	padding-top: var(--project-section-spacing);
	padding-bottom: var(--project-section-spacing);

	@include viewport.breakpoint(md) {
		--flow-space: var(--space-3xl);
	}

	@include viewport.breakpoint(xl) {
		--flow-space: var(--space-4xl);
	}
}

.heroSection {
	min-height: calc(100dvh - var(--header-height) - var(--space-4xl));
	display: grid;
	grid-template-rows: 1fr auto;
	padding-top: 0;
	padding-bottom: 0;

	> div:first-of-type {
		align-content: center;
	}
}

.heroContent {
	--hero-flow-space: var(--space-xl);

	margin-top: var(--hero-flow-space);
	margin-bottom: var(--hero-flow-space);

	> * + * {
		margin-top: var(--hero-flow-space);
	}

	@include viewport.breakpoint(xs) {
		--hero-flow-space: var(--space-4xl);
	}
}

.heroTitle {
	@include typography.headline(3xl);

	@include viewport.breakpoint(xs) {
		@include typography.display(sm);
	}

	.right {
		display: block;
		text-align: right;
	}
}

.altFont {
	font-family: var(--font-alt);
	text-transform: initial;
	line-height: var(--line-height-2xs);
}

.heroDetails > * + * {
	margin-top: var(--flow-space);
}

.heroSubtitle {
	@include typography.p(lg);
	@include typography.optimal-text-length;
	color: var(--text-tertiary);
}

.heroCopy {
	--column-width: 50ch;

	@include typography.p;
	max-width: var(--column-width);

	@include viewport.breakpoint(md) {
		column-count: 2;
		column-gap: var(--space-lg);
		max-width: calc(var(--column-width) * 2);
	}

	a {
		@include typography.link(underline);
	}
}

.scrollContainer {
	@include layout.max-width;
	padding-bottom: clamp(var(--space-base), 4dvw, var(--space-lg));
}

.scroll {
	position: relative;
	padding: var(--space-base) 0;
	text-align: center;
	width: 100%;
	user-select: none;
}

.float {
	position: absolute;
	left: 0;
	right: 0;
	font-size: var(--text-xl);
	line-height: 0;
	animation: float 2.5s cubic-bezier(0.175, 0.885, 0.32, 1.275) infinite;
}

.vertSection {
	position: relative;
	overflow: hidden;
	padding-bottom: var(--space-xl);

	&::before {
		content: '';
		display: block;
		padding-bottom: clamp(187px, 29dvw, 414px);
	}
}

.bgVertText {
	position: absolute;
	writing-mode: vertical-lr;
	user-select: none;
	pointer-events: none;
}

.vertTextHero {
	@include typography.display(lg);
	top: -15%;
	left: 51.5%;
	transform: translateX(-50%);
	font-size: clamp(13.41rem, 21dvw, 29.23rem); // optical override for vertical text style alignment.
	text-shadow: var(--text-shadow-vert);

	@include viewport.breakpoint(xs) {
		left: 51%;
	}
}

.vertTextTopLeft {
	@include typography.display;
	top: -39px;
	left: -16px;
	opacity: 0.025;

	@include viewport.breakpoint(md, max) {
		font-size: var(--text-3xl);
		top: -21px;
	}
}

.vertTextBottomRight {
	@include typography.display;
	transform: rotate(180deg);
	right: -16px;
	bottom: -39px;
	opacity: 0.025;

	@include viewport.breakpoint(md, max) {
		font-size: var(--text-3xl);
		bottom: -22px;
	}

	@include viewport.breakpoint(sm, max) {
		display: none;
	}
}

.multiSectionHeader {
	@include viewport.breakpoint(sm) {
		text-align: center;
	}

	> * {
		margin-inline: auto;
	}
}

.multiSectionTitle {
	@include typography.headline;

	margin-bottom: var(--space-lg);
}

.multiSectionCopy {
	@include typography.p(lg);
	@include typography.optimal-text-length;

	color: var(--text-tertiary);
}
