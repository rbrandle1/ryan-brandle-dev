@use '@/styles/utils/typography';
@use '@/styles/utils/layout';
@use '@/styles/utils/viewport';
@use '@/styles/utils/element';

.projectPage {
	// PAGE VARIABLES
	--flow-space-base: 1lh;
	--hero-spacing: 1lh;
	--section-spacing: 4lh;

	@include viewport.breakpoint(xs) {
		--hero-spacing: 2lh;
	}

	@include viewport.breakpoint(md) {
		--hero-spacing: 4lh;
	}

	// TYPOGRAPHY
	p {
		@include typography.p;
		max-width: var(--optimal-line-length-base);
	}

	.h1,
	.h2 {
		max-width: var(--optimal-line-length-2xs);
	}

	.h1 {
		@include typography.headline(3xl);

		@include viewport.breakpoint(2xl) {
			font-size: clamp(var(--text-3xl), 7dvw, var(--text-4xl));
		}
	}

	.h2 {
		@include typography.headline(2xl);
	}

	.h3 {
		@include typography.headline(xl);
		max-width: var(--optimal-line-length-xs);
	}

	.subhead {
		@include typography.p(lg);
		max-width: var(--optimal-line-length-sm);
		color: var(--text-tertiary);
		text-wrap: balance;
	}

	.altFont {
		@include typography.alt-font;
	}

	[data-section='dark'] {
		position: relative;
		background-color: var(--surface-primary);
		background-image: linear-gradient(
			165deg,
			hsl(0deg 0% 13%) 0px,
			hsl(0deg 0% 13%) 230px,
			hsl(0deg 0% 12%) 320px,
			hsl(0deg 0% 10%) 362px,
			hsl(0deg 0% 9%) 398px,
			hsl(0deg 0% 8%) 428px,
			hsl(0deg 0% 6%) 464px,
			hsl(0deg 0% 5%) 494px,
			hsl(0deg 0% 4%) 524px,
			hsl(0deg 0% 3%) 560px,
			hsl(0deg 0% 1%) 602px,
			hsl(0deg 0% 0%) 644px,
			hsl(0deg 0% 0%) 698px,
			hsl(0deg 0% 0%) 830px
		);

		@include viewport.breakpoint(xs) {
			background-image: linear-gradient(
				165deg,
				hsl(0deg 0% 13%) 0px,
				hsl(0deg 0% 13%) 320px,
				hsl(0deg 0% 12%) 410px,
				hsl(0deg 0% 10%) 452px,
				hsl(0deg 0% 9%) 488px,
				hsl(0deg 0% 8%) 518px,
				hsl(0deg 0% 6%) 554px,
				hsl(0deg 0% 5%) 584px,
				hsl(0deg 0% 4%) 614px,
				hsl(0deg 0% 3%) 650px,
				hsl(0deg 0% 1%) 692px,
				hsl(0deg 0% 0%) 734px,
				hsl(0deg 0% 0%) 788px,
				hsl(0deg 0% 0%) 920px
			);
		}

		@include viewport.breakpoint(sm) {
			background-image: linear-gradient(
				165deg,
				hsl(0deg 0% 13%) 0px,
				hsl(0deg 0% 13%) 500px,
				hsl(0deg 0% 12%) 590px,
				hsl(0deg 0% 10%) 632px,
				hsl(0deg 0% 9%) 668px,
				hsl(0deg 0% 8%) 698px,
				hsl(0deg 0% 6%) 734px,
				hsl(0deg 0% 5%) 764px,
				hsl(0deg 0% 4%) 794px,
				hsl(0deg 0% 3%) 830px,
				hsl(0deg 0% 1%) 872px,
				hsl(0deg 0% 0%) 914px,
				hsl(0deg 0% 0%) 968px,
				hsl(0deg 0% 0%) 1100px
			);
		}

		@include viewport.breakpoint(md) {
			background-image: linear-gradient(
				180deg,
				hsl(0deg 0% 13%) 0px,
				hsl(0deg 0% 12%) 180px,
				hsl(0deg 0% 10%) 264px,
				hsl(0deg 0% 9%) 312px,
				hsl(0deg 0% 8%) 372px,
				hsl(0deg 0% 6%) 432px,
				hsl(0deg 0% 5%) 504px,
				hsl(0deg 0% 4%) 576px,
				hsl(0deg 0% 3%) 672px,
				hsl(0deg 0% 1%) 816px,
				hsl(0deg 0% 0%) 1200px
			);

			&::before {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				height: 16px;
				box-shadow: inset 0 16px 16px -16px var(--p-color-black-a30);
				border-top: solid 1px var(--p-color-black-a20);
				pointer-events: none;
			}
		}
	}
}

// LAYOUT
.containerGrid {
	@include layout.grid;

	> * + * {
		margin-block-start: var(--flow-space, var(--flow-space-base));
	}
}

.heroSection {
	--hero-offset: calc(var(--hero-spacing) * 2);

	background-color: var(--surface-primary);
	padding-block-start: var(--hero-spacing);
	padding-block-end: var(--hero-offset);

	@include viewport.breakpoint(md) {
		padding-block-end: calc(var(--hero-offset) + 1lh); //offset for metabox
	}
}

.section {
	padding-block: var(--section-spacing);

	[data-section='dark'] & {
		padding-block-start: 0;

		&:last-child {
			padding-block-end: calc(var(--section-spacing) * 1.5);

			@include viewport.breakpoint(xl) {
				padding-block-end: calc(var(--section-spacing) * 2);
			}
		}
	}
}

.footer {
	padding-block-end: calc(var(--section-spacing) * 1.5);

	@include viewport.breakpoint(xl) {
		padding-block-start: calc(var(--section-spacing) * 1.5);
		padding-block-end: calc(var(--section-spacing) * 2);
	}
}

// alters the margin bottom of certain elements to account for base flow space of following elements. Use this for the last large element that is not text, like an image or a SideImage component. This will add some extra space between it and the following text element.
.flowOffset {
	&:not(:last-child) {
		margin-block-end: calc(var(--flow-space) - var(--flow-space-base));
	}
}

.heroOffset {
	@include viewport.breakpoint(md) {
		transform: translateY(calc(var(--hero-spacing) * -1));
	}

	> div > .h2:first-of-type {
		text-shadow: var(--shadow-box);
	}
}

// COMPONENT SPECIFIC
.imageContainer {
	--flow-space: 2lh;

	&:not(:last-child) {
		&:has(figcaption) {
			margin-block-end: calc(var(--flow-space) - var(--flow-space-base) - 1lh);
		}
	}
}

.heroImage {
	grid-column: breakout;

	@include viewport.breakpoint(md, max) {
		z-index: 1;
		grid-column: full;
	}

	figure > div {
		box-shadow: var(--shadow-box);
	}
}

.callout {
	--flow-space: 4lh;

	@include viewport.breakpoint(sm) {
		--flow-space: 6lh;
	}
}

.sideImagesContainer,
.multiImagesContainer {
	--flow-space: 3lh;

	@include viewport.breakpoint(sm) {
		--flow-space: 4lh;
	}

	> * + * {
		margin-block-start: var(--flow-space, var(--flow-space-base));
	}
}

.sideImagesContainer > *:has(figcaption) + * {
	@include viewport.breakpoint(sm, max) {
		margin-block-start: calc(var(--flow-space, var(--flow-space-base)) - 1lh);
	}
}

// ELEMENTS
.link {
	@include typography.link(underline);
}

.accentEdgeGrad {
	@include element.accent-edge(gradient);
}

.accentEdgeGradRev {
	@include element.accent-edge(reverse);
}

.button {
	@include viewport.breakpoint(xs) {
		max-width: fit-content;
	}
}
.buttonLink {
	display: inline-block;
	max-width: fit-content;
	// @include typography.link;
	@include typography.link(false, reverse);
}
