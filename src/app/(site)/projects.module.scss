@use '@/styles/utils/typography';
@use '@/styles/utils/layout';
@use '@/styles/utils/viewport';
@use '@/styles/utils/element';

// TODO: factor in the accent edge spacing for the grid approach.
// TODO: update to utilize has:(.breakout, .full)...etc.

.section {
	background-color: var(--surface-primary);
	padding-top: var(--space-8xl);
	padding-bottom: var(--space-8xl);
}

// .container {
// 	@include layout.max-width;

.containerGrid {
	// TODO: Make this a mixin like max-width and apply to other home?

	--gutter: clamp(var(--space-base), 4dvw, var(--space-lg));
	--full: minmax(var(--gutter), 1fr);
	--content: min(var(--viewport-md), 100% - var(--gutter) * 2);
	--breakout: minmax(0, var(--space-3xl));

	// --flow-space: 1lh;

	border: 1px solid red;
	display: grid;
	// row-gap: var(--flow-space);
	grid-template-columns:
		[full-start] var(--full)
		[breakout-start] var(--breakout)
		[content-start] var(--content) [content-end]
		var(--breakout) [breakout-end]
		var(--full) [full-end];

	> * {
		grid-column: content;
	}

	.breakout {
		grid-column: breakout;
	}

	.full {
		grid-column: full;
	}

	> * + * {
		margin-block-start: var(--flow-space, 1lh);
	}
}

.callout {
	--flow-space: 4lh;
	//Todo: use clamp on these
	margin-block-end: calc(var(--flow-space) - 1lh);
	//TODO: figure out how to handle the the block end issue... can I make the flow work with margin-block and :first/last-child?
}

.imageContainer {
	--flow-space: 2lh;
	position: relative;
	//Todo: use clamp on these
	// margin-block: 2lh;

	figcaption {
		@include typography.caption;
		margin-top: var(--space-sm);
	}
}

.image {
	position: relative;
	display: grid;
	place-items: center;
	padding-left: var(--space-xl);
	padding-right: var(--space-xl);
	border-radius: var(--radius-default);
	aspect-ratio: 3 / 2;
	overflow: hidden;
	user-select: none;

	img {
		position: absolute;
		object-fit: cover;
	}
}

.header {
	@include typography.headline(3xl);
}

.h2 {
	@include typography.headline(2xl);
}

.h3 {
	@include typography.headline(xl);
}

.pLg {
	@include typography.p(lg);
}

.p {
	@include typography.p;
}

.pSm {
	@include typography.p(sm);
}

// .caption {
// 	@include typography.caption;
// }

.altFont {
	font-family: var(--font-alt);
	font-weight: var(--font-weight-black);
}

.link {
	@include typography.link(underline);
}

.linkNeutral {
	@include typography.link-neutral;
}

.accentEdge {
	@include element.accent-edge;
}
