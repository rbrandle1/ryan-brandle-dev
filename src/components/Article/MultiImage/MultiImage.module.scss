@use '@/styles/utils/typography' as typography;
@use '@/styles/utils/viewport' as viewport;
@use '@/styles/utils/element' as element;

.multiImage {
	--gap: calc(var(--gutter) / 2);

	display: grid;
	grid-template-columns: inherit;
	position: relative;

	@include viewport.breakpoint(sm) {
		--gap: 0.25lh;

		// position: relative;
		gap: var(--gap);
		grid-template-columns: repeat(3, 1fr);
	}
}

.mobileSlider {
	grid-column: full;
	display: grid;
	grid-template-columns: inherit;
	overflow-x: scroll;
	overscroll-behavior-x: contain;
	scroll-snap-type: x mandatory;
	scrollbar-width: none;

	&::-webkit-scrollbar {
		display: none;
	}
}

.slideWrapper {
	display: flex;
	gap: var(--gap);
	grid-column: main;
	padding-block: 2px; // hack to fix mobile border cut off

	&::after {
		content: '';
		align-self: stretch;
		padding-inline-end: var(--gap);
	}
}

.figure {
	@include viewport.breakpoint(sm, max) {
		flex: 0 0 auto;
		min-width: calc(100% - var(--gap) * 2);
		scroll-snap-align: center;

		&:nth-child(4) .image {
			border: none;
		}
	}

	@include viewport.breakpoint(sm) {
		&:nth-child(4):not(.textRight &) {
			order: 1;
		}
	}
}

.image {
	position: relative;
	border-radius: var(--radius-lg);
	aspect-ratio: var(--ratio-portrait);
	overflow: hidden;
	user-select: none;

	@include viewport.breakpoint(sm, max) {
		border: 1px solid var(--p-color-gray-900);
	}

	img {
		object-fit: cover;
	}
}

.textContainer {
	grid-column: main;

	@include viewport.breakpoint(sm) {
		display: grid;
		grid-column: span 2;
		grid-template-columns: var(--breakout) min(668px, 100%) minmax(0, calc(var(--gap) * 2));
		grid-template-areas: '. text .';
	}

	.textRight & {
		@include viewport.breakpoint(sm) {
			grid-template-areas: '. text';
			grid-template-columns: calc(var(--flow-space) / 2) 1fr;
		}

		@include viewport.breakpoint(lg) {
			grid-template-columns: var(--flow-space) 1fr;
		}
	}

	> div {
		grid-area: text;
		margin-block-start: 2lh;

		@include viewport.breakpoint(sm) {
			margin-block-start: var(--flow-space);

			&:not(.textRight &) {
				padding-inline-end: 1lh;
			}

			.figure:nth-child(3):has(figcaption) ~ & {
				margin-block-start: calc(var(--flow-space) - 1lh);
			}
		}

		> * + * {
			margin-block-start: var(--flow-space-base);
		}
	}
}

.caption {
	@include viewport.breakpoint(sm, max) {
		position: absolute;
		right: calc(var(--gutter) / 1.6);
		text-align: right;

		svg {
			left: auto;
			right: calc(var(--gutter) / 2);
		}
	}
}
