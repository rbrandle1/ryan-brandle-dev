@use '@/styles/utils/typography';
@use '@/styles/utils/viewport';

.callOut {
	--transition-duration: var(--duration-3xl);
	--transition-delay: var(--duration-sm);
	--transition-distance: var(--space-md);
	--transition-ease: var(--ease-in-out);

	display: grid;
	place-items: center;
	gap: var(--space-lg);
	text-align: center;

	@media not (prefers-reduced-motion: reduce) {
		> * {
			opacity: 0;
			transform: translateY(var(--transition-distance));
			transition: opacity var(--transition-duration) var(--transition-ease),
				transform var(--transition-duration) var(--transition-ease);
			will-change: opacity, transform;

			@for $i from 1 through 3 {
				&:nth-child(#{$i}) {
					transition-delay: calc((#{$i} - 1) * var(--transition-delay));
				}
			}
		}

		&.fadeInUp > * {
			opacity: 1;
			transform: translateY(0);
		}
	}
}

.icon {
	width: var(--text-2xl);

	svg {
		fill: var(--icon-color, currentColor);
	}
}

.title {
	color: var(--title-color, var(--text-primary));
	max-width: var(--optimal-line-length-sm);
}

.lg {
	@include typography.alt-headline(md);

	@include viewport.breakpoint(md) {
		@include typography.alt-headline(lg);
	}
}

.md {
	@include typography.alt-headline(md);
}

.sm {
	@include typography.alt-headline(sm);
}

.body {
	@include typography.p(lg);
	max-width: var(--optimal-line-length-base);
	color: var(--text-tertiary);
}
