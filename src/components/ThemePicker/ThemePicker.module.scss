@use '@/styles/utils/element';
@use '@/styles/utils/viewport';

.themePicker {
	display: grid;
	grid-auto-flow: column;
	align-items: center;
	gap: var(--space-2xs);
	border: none;

	@include viewport.breakpoint(414px) {
		gap: var(--space-xs);
	}

	@include viewport.breakpoint(xs) {
		gap: var(--space-sm);
	}

	.options {
		display: grid;
		grid-auto-flow: inherit;

		> * {
			--option-spacing: var(--space-2xs);

			display: flex;
			padding-inline: var(--option-spacing);

			@include viewport.breakpoint(sm) {
				--option-spacing: var(--space-xs);
			}
		}
	}

	legend,
	label span {
		@include element.visually-hidden;
	}

	label {
		@include viewport.has-hover {
			cursor: pointer;
		}
	}

	input[type='radio'] {
		--input-border-width: 0.15em;
		--input-size: var(--space-md);

		appearance: none;
		width: var(--input-size);
		height: var(--input-size);
		border-radius: 3;
		border: var(--input-border-width) solid var(--border-color);
		transition: background-color var(--duration-sm) ease-out, border-width var(--duration-sm) ease-out,
			border-color var(--duration-sm) ease-out, transform var(--duration-sm) ease-out;
		background-color: var(--radio-color, black);

		@include viewport.breakpoint(sm) {
			--input-border-width: 0.2em;
			--input-size: var(--space-lg);
		}

		@include viewport.has-hover(':hover', ':focus-visible') {
			cursor: pointer;
			transform: var(--button-raise);
		}

		&:checked {
			--border-color: var(--radio-color);

			border-style: solid;
			background-color: var(--color-primary);
			border-width: calc(var(--input-border-width) * 2.5);
		}

		&.m {
			--radio-color: var(--p-color-magenta-500);
		}

		&.c {
			--radio-color: var(--p-color-cyan-500);
		}

		&.y {
			--radio-color: var(--p-color-yellow-500);
		}

		&.p {
			--radio-color: var(--p-color-purple-500);
		}
	}

	.icon {
		width: var(--text-md);
	}
}
